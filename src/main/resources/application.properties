spring.application.name=threatre-aggregator
server.port = 8090

spring.datasource.url=jdbc:postgresql://localhost:5432/movie_ticket_booking?createTableIfNotExists=true
spring.datasource.username=postgres
spring.datasource.password=root

# Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# Specify the dialect for PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# Sample Kafka Configuration
# Kafka bootstrap servers (comma-separated if multiple)
#spring.kafka.bootstrap-servers=localhost:9092
# Consumer group id
#spring.kafka.consumer.group-id=bookmyshow-group
# Key/value serializers and deserializers
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.Strin
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.Jso
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.Str
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.JsonDeserializer# (Optional) Trust all packages for JSON deserialization
# spring.kafka.consumer.properties.spring.json.trusted.packages=*
# (Optional) Enable auto topic creation
# spring.kafka.admin.auto-create=true
# (Optional) Set consumer auto offset reset
#spring.kafka.consumer.auto-offset-reset=earliest
# (Optional) Producer acks
#spring.kafka.producer.acks=all


